<?xml version="1.0" encoding="UTF-8"?>
<!--

    Robonews.io

    Copyright (c) 2013-2015 Rosty Kerei.
    All rights reserved.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">

    <import resource="classpath:coreContext.xml"/>
    <import resource="classpath:messagingContext.xml"/>
    <import resource="classpath:serviceHttpContext.xml"/>

    <rabbit:listener-container connection-factory="connectionFactory" concurrency="${workerImageCrawler.threads}" message-converter="jsonMessageConverter">
        <rabbit:listener ref="imageQueueListener" method="listen" queue-names="imageQueue"/>
    </rabbit:listener-container>

    <bean id="imageQueueListener" class="io.robonews.worker.image.crawler.ImageQueueListener"/>

    <bean id="imageStorage" class="io.robonews.service.storage.file.StorageServiceFile">
        <constructor-arg name="rootDir" value="/home/robonews/img"/>
    </bean>
    <!--<bean id="imageStorage" class="io.robonews.service.storage.rackspace.StorageServiceRackspace">
        <constructor-arg name="apiUsername" value="${rackspace.username}"/>
        <constructor-arg name="apiKey" value="${rackspace.key}"/>
        <constructor-arg name="container" value="${rackspace.container.images}"/>
    </bean>-->

    <context:annotation-config/>
    <context:component-scan base-package="io.robonews.worker.image.crawler"/>
    <context:property-placeholder  location="file:${config.file}"/>

</beans>